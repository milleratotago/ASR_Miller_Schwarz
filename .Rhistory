est_tau_B <- est_tau_A
# We estimate mu_C as the mean of the congruent trials - the mean of the exponential
# component B
est_mu_C <- mean_con - est_tau_B
# We estimate sigma_C as the sqrt of the total variance minus that accounted for by the
# exponential component.
est_sigma_C <- sqrt((sd_con^2) - (est_tau_B^2))
# We estimate lambda_inh as the mean inhibitory effect
est_lambda_inh <- 2 * (mean_inc - mean_con)
# We estimate no excitatory effect
est_lambda_exc <- 0
# We pass in the square root for those params that get squared to avoid negatives.
# See asr_error, above.
params <- c(sqrt(est_tau_A),
sqrt(est_tau_B),
est_mu_C,
sqrt(est_sigma_C),
est_lambda_inh)
# Provide either five or six parameters to fminsearh depending on how many are to
# be optimised (ess asr_fit, above)
if (estimate_excitation) {
params <- c(params, est_lambda_exc)
}
return(params)
}
###################################################################################
# rescale_asr_params: Parameters that cannot go negative (e.g. sigma_C) are squared
# before being passed to fminsearch. Thus fminsearch is actually optimising the
# square root of the parameter. To return the value to its original scale, we
# must square it.
rescale_asr_params <- function(param_vector)
{
rescaled_vector <- param_vector
# tau_A
rescaled_vector[1] <- param_vector[1]^2
# tau_B
rescaled_vector[2] <- param_vector[2]^2
# sigma_C
rescaled_vector[4] <- param_vector[4]^2
return(rescaled_vector)
}
##########################################################
# Corresponding to R distribution family structure:
#
# dasr(t, ...) returns the densities of t_con and t_incon
# pasr(t, ...) returns the cumulative densities at t_con and t_incon
# qasr(p, ...) returns the values of t_con and t_incon at cumulative
#              density p
#
# Additional params for each method are tau_A, tau_B, mu_C,
# sigma_C, lambda_inh and lambda_exc
###########################################################
source("asr_fit.R")
dasr <- function(t, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
{
alpha <- 1/tau_A
beta <- 1/tau_B
d_con <- f_rt_all(t, alpha, beta, mu_C, sigma_C, lambda_exc)
d_incon <- f_rt_all(t, alpha, beta, mu_C, sigma_C, lambda_inh)
result <- c(d_con = d_con, d_incon = d_incon)
return(result)
}
pasr <- function(t, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
{
alpha <- 1/tau_A
beta <- 1/tau_B
cdf_con <- integrate(function(t) {f_rt_all(t, alpha, beta, mu_C, sigma_C, lambda_exc)},
lower = 1, upper = t)
cdf_incon <- integrate(function(t) {f_rt_all(t, alpha, beta, mu_C, sigma_C, lambda_inh)},
lower = 1, upper = t)
result <- c(p_con = cdf_con$value, p_incon = cdf_incon$value)
return(result)
}
f_to_zero <- function(t, target_p, tau_A, tau_B, mu_C, sigma_C, lambda)
{
cdf_t <- integrate(function(t) {f_rt_all(t, alpha, beta, mu_C, sigma_C, lambda)},
lower = 1, upper = t)
return(cdf_t$value - target_p)
}
qasr <- function(p, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
{
lb <- 1
ub <- 3000
inv_cdf_con <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_exc)},
x = c(lb,ub))
inv_cdf_incon <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_inh)},
x = c(lb,ub))
result <- c(q_con <- inv_cdf_con$x, q_incon <- inv_cdf_incon$x)
return(result)
}
asr_predictions <- function(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc,
percentiles = seq(0.005,0.995,0.01),
show_plots = TRUE)
{
# Compute t values
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
quantiles_con <- quantiles[1,]
quantiles_incon <- quantiles[2,]
asr_df <- data.frame(p = percentiles,
t_con = quantiles_con,
t_incon = quantiles_incon)
# We have different t values to inspect for con and incon
# Get densities for the congruent t values (quantiles)
pdf_t_con <- sapply(quantiles_con, FUN = dasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
pdf_con <- pdf_t_con["d_con",]
# Get densities for the incongruent t values (quantiles)
pdf_t_incon <- sapply(quantiles_incon, FUN = dasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
pdf_incon <- pdf_t_incon["d_incon", ]
# Add the new columns
asr_df$pdf_con <- pdf_con
asr_df$pdf_incon <- pdf_incon
# Compute the means and deltas
asr_df$mean_t <- (asr_df$t_con + asr_df$t_incon)/2
asr_df$delta_t <- asr_df$t_incon - asr_df$t_con
if (show_plots) {
par(mfrow = c(3,1))
# PDF plot
# !!! Adjust lims
plot(asr_df$t_con, asr_df$pdf_con, type = "l", xlab = "RT", ylab = "PDF")
lines(asr_df$t_incon, asr_df$pdf_incon, col = 2)
legend("topright", legend=c("Congruent", "Incongruent"),
col=c(1, 2), lty=c(1,1))
# CDF plot
# !!! Adjust lims
plot(asr_df$t_con, asr_df$p, type = "l", xlab = "RT", ylab = "CDF")
lines(asr_df$t_incon, asr_df$p, col = 2)
legend("bottomright", legend=c("Congruent", "Incongruent"),
col=c(1, 2), lty=c(1,1))
# Delta plot
plot(asr_df$mean_t, asr_df$delta_rt, type = "l",
xlab = "RT", ylab = "Delta")
}
} # end asr_predictions
##############################################################################
# Testing
##############################################################################
library(gamlss)
library(pracma)
tau_A <- 80
tau_B <- 100
mu_C <- 400
sigma_C <- 50
lambda_exc <- 0
lambda_inh <- 70
soa <- 0
asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
percentiles = seq(0.005,0.995,0.01)
show_plots = TRUE
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_predictions.R')
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
quantiles_con <- quantiles[1,]
quantiles_incon <- quantiles[2,]
asr_df <- data.frame(p = percentiles,
t_con = quantiles_con,
t_incon = quantiles_incon)
percentiles = seq(0.005,0.995,0.01)
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
quantiles_con <- quantiles[1,]
quantiles_incon <- quantiles[2,]
asr_df <- data.frame(p = percentiles,
t_con = quantiles_con,
t_incon = quantiles_incon)
head(asr_df)
# Get densities for the congruent t values (quantiles)
pdf_t_con <- sapply(quantiles_con, FUN = dasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
pdf_con <- pdf_t_con["d_con",]
# Get densities for the incongruent t values (quantiles)
pdf_t_incon <- sapply(quantiles_incon, FUN = dasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
pdf_incon <- pdf_t_incon["d_incon", ]
# Add the new columns
asr_df$pdf_con <- pdf_con
asr_df$pdf_incon <- pdf_incon
head(asr_df)
# Compute the means and deltas
asr_df$mean_t <- (asr_df$t_con + asr_df$t_incon)/2
asr_df$delta_t <- asr_df$t_incon - asr_df$t_con
head(asr_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_predictions.R')
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_predictions.R')
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc)
View(asr_pred_df)
View(asr_pred_df)
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_fit_demo()
asr_predictions_demo()
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_predictions_demo()
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_predictions_demo()
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_distribution.R')
asr_predictions_demo()
asr_fit_demo()
rm(list = ls())
dev.off()
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_fit_demo()
rm(list = ls())
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_fit.R')
asr_fit_demo()
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_fit_demo()
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_fit_demo()
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_fit_demo()
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 475
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
percentiles = seq(0.005,0.995,0.01)
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
p
p <- 0.005
lb <- 1
ub <- 3000
inv_cdf_con <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_exc, soa)},
x = c(lb,ub))
inv_cdf_incon <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_inh, soa)},
x = c(lb,ub))
result <- c(q_con <- inv_cdf_con$x, q_incon <- inv_cdf_incon$x)
p <- 0.015
lb <- 1
ub <- 3000
inv_cdf_con <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_exc, soa)},
x = c(lb,ub))
inv_cdf_incon <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_inh, soa)},
x = c(lb,ub))
result <- c(q_con <- inv_cdf_con$x, q_incon <- inv_cdf_incon$x)
result
qasr <- function(p, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
{
print(p)
lb <- 1
ub <- 3000
inv_cdf_con <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_exc, soa)},
x = c(lb,ub))
inv_cdf_incon <- fzero(function(t) {f_to_zero(t, p, tau_A, tau_B, mu_C, sigma_C, lambda_inh, soa)},
x = c(lb,ub))
result <- c(q_con <- inv_cdf_con$x, q_incon <- inv_cdf_incon$x)
return(result)
}
# sapply returns a 1 x n_percentile matrix. 1st row is congruent, 2nd row is incongruent
quantiles <- sapply(percentiles, FUN = qasr, tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
result
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_distribution.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 475
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
warnings()
head(asr_pred_df)
asr_predictions_demo
asr_predictions_demo()
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 475
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls()
)
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 475
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
warnings()
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- 4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
warnings()
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- 10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- 4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- 4
lambda_inh <- 170
soa <- 33
# Congruent condition density for 400
f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa)
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa)
test_con_400
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa)
test_con_400
soa <- 33
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa = soa)
test_con_400
soa
soa <- 0
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa = soa)
test_con_400
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa = 0)
test_con_400
# Congruent condition density for 400
test_con_400 <- f_rt_all(400, 1/tau_A, 1/tau_B, mu_C, sigma_C, lambda_exc, soa = 33)
test_con_400
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
f_rt_all(400, alpha, beta, mu_C, sigma_C, 0, 0)
alpha <- 1/tau_A
beta <- 1/tau_B
f_rt_all(400, alpha, beta, mu_C, sigma_C, 0, 0)
alpha <- 1/tau_A
alpha
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- 4
lambda_inh <- 170
soa <- 33
alpha <- 1/tau_A
beta <- 1/tau_B
f_rt_all(400, alpha, beta, mu_C, sigma_C, 0, 0)
f_rt_all(400, alpha, beta, mu_C, sigma_C, 10, 0)
f_rt_all(400, alpha, beta, mu_C, sigma_C, 0, 30)
f_rt_all(400, alpha, beta, mu_C, sigma_C, -10, 30)
f_rt_all(400, alpha, beta, mu_C, sigma_C, -10, 0)
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- -4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- -4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- -4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- -10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
# Jeff example 2
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- -10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
# Jeff example 2
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- -10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
# Jeff example 2
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- -10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
rm(list = ls())
source('D:/Miller/ASR_miller_schwarz/ASR_miller_schwarz/asr_toolkit_examples.R')
# Jeff example 2
tau_A <- 108
tau_B <- 91
mu_C <- 423
sigma_C <- 47.5
lambda_exc <- -10
lambda_inh <- 67
soa <- 25
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
# Jeff example 3
tau_A <- 84
tau_B <- 97
mu_C <- 388
sigma_C <- 38
lambda_exc <- -4
lambda_inh <- 170
soa <- 33
asr_pred_df <- asr_predictions(tau_A, tau_B, mu_C, sigma_C, lambda_inh, lambda_exc, soa)
head(asr_pred_df)
